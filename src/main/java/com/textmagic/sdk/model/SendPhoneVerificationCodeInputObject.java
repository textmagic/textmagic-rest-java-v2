/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SendPhoneVerificationCodeInputObject
 */

public class SendPhoneVerificationCodeInputObject {
  @SerializedName("phone")
  private String phone = null;

  @SerializedName("brand")
  private String brand = null;

  @SerializedName("codeLength")
  private Integer codeLength = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("senderId")
  private String senderId = null;

  @SerializedName("country")
  private String country = null;

  public SendPhoneVerificationCodeInputObject phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Use the phone number in international E.164 format. If you need to pass a phone number in the local format, please use it with the **country** parameter to specify the origin country of the phone number. 
   * @return phone
  **/
  @ApiModelProperty(example = "447860021130", required = true, value = "Use the phone number in international E.164 format. If you need to pass a phone number in the local format, please use it with the **country** parameter to specify the origin country of the phone number. ")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public SendPhoneVerificationCodeInputObject brand(String brand) {
    this.brand = brand;
    return this;
  }

   /**
   * An alphanumeric string with up to 18 characters you can use to personalize the verification text message body, to help users identify your company or application name. For example: “Your TextMagic PIN is …” 
   * @return brand
  **/
  @ApiModelProperty(example = "TextMagic", required = true, value = "An alphanumeric string with up to 18 characters you can use to personalize the verification text message body, to help users identify your company or application name. For example: “Your TextMagic PIN is …” ")
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }

  public SendPhoneVerificationCodeInputObject codeLength(Integer codeLength) {
    this.codeLength = codeLength;
    return this;
  }

   /**
   * The length of the verification code. The value can be 4 or 6 characters. 
   * @return codeLength
  **/
  @ApiModelProperty(example = "4", required = true, value = "The length of the verification code. The value can be 4 or 6 characters. ")
  public Integer getCodeLength() {
    return codeLength;
  }

  public void setCodeLength(Integer codeLength) {
    this.codeLength = codeLength;
  }

  public SendPhoneVerificationCodeInputObject language(String language) {
    this.language = language;
    return this;
  }

   /**
   * By default, the SMS or text-to-speech (TTS) voice message is generated in the locale that matches the number. For example, the text message or TTS message for a 33\\* number is sent in French. Use this parameter to explicitly control the language, accent, and gender used for the verification request. Choosing one of the following: &#x60;de-de&#x60;, &#x60;en-au&#x60;, &#x60;en-gb&#x60;, &#x60;en-us&#x60;, &#x60;en-in&#x60;, &#x60;es-es&#x60;, &#x60;es-mx&#x60;, &#x60;es-us&#x60;, &#x60;fr-ca&#x60;, &#x60;fr-fr&#x60;, &#x60;is-is&#x60;, &#x60;it-it&#x60;, &#x60;ja-jp&#x60;, &#x60;ko-kr&#x60;, &#x60;nl-nl&#x60;, &#x60;pl-pl&#x60;, &#x60;pt-pt&#x60;, &#x60;pt-br&#x60;, &#x60;ro-ro&#x60;, &#x60;ru-ru&#x60;, &#x60;sv-se&#x60;, &#x60;tr-tr&#x60;, &#x60;zh-cn&#x60; or &#x60;zh-tw&#x60;. 
   * @return language
  **/
  @ApiModelProperty(example = "en-gb", value = "By default, the SMS or text-to-speech (TTS) voice message is generated in the locale that matches the number. For example, the text message or TTS message for a 33\\* number is sent in French. Use this parameter to explicitly control the language, accent, and gender used for the verification request. Choosing one of the following: `de-de`, `en-au`, `en-gb`, `en-us`, `en-in`, `es-es`, `es-mx`, `es-us`, `fr-ca`, `fr-fr`, `is-is`, `it-it`, `ja-jp`, `ko-kr`, `nl-nl`, `pl-pl`, `pt-pt`, `pt-br`, `ro-ro`, `ru-ru`, `sv-se`, `tr-tr`, `zh-cn` or `zh-tw`. ")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public SendPhoneVerificationCodeInputObject senderId(String senderId) {
    this.senderId = senderId;
    return this;
  }

   /**
   * One of the available [sender settings](https://my.textmagic.com/online/reply-options/) on your TextMagic account. If the specified sender setting type is not allowed for some destinations, a fallback default sender will be used to ensure message delivery. More info about known restrictions can be found [here](https://support.textmagic.com/article/how-to-understand-sender-setting-restrictions/). 
   * @return senderId
  **/
  @ApiModelProperty(example = "TextMagic", value = "One of the available [sender settings](https://my.textmagic.com/online/reply-options/) on your TextMagic account. If the specified sender setting type is not allowed for some destinations, a fallback default sender will be used to ensure message delivery. More info about known restrictions can be found [here](https://support.textmagic.com/article/how-to-understand-sender-setting-restrictions/). ")
  public String getSenderId() {
    return senderId;
  }

  public void setSenderId(String senderId) {
    this.senderId = senderId;
  }

  public SendPhoneVerificationCodeInputObject country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The 2-letter ISO country code for the local phone number.
   * @return country
  **/
  @ApiModelProperty(example = "US", value = "The 2-letter ISO country code for the local phone number.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendPhoneVerificationCodeInputObject sendPhoneVerificationCodeInputObject = (SendPhoneVerificationCodeInputObject) o;
    return Objects.equals(this.phone, sendPhoneVerificationCodeInputObject.phone) &&
        Objects.equals(this.brand, sendPhoneVerificationCodeInputObject.brand) &&
        Objects.equals(this.codeLength, sendPhoneVerificationCodeInputObject.codeLength) &&
        Objects.equals(this.language, sendPhoneVerificationCodeInputObject.language) &&
        Objects.equals(this.senderId, sendPhoneVerificationCodeInputObject.senderId) &&
        Objects.equals(this.country, sendPhoneVerificationCodeInputObject.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phone, brand, codeLength, language, senderId, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendPhoneVerificationCodeInputObject {\n");
    
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    codeLength: ").append(toIndentedString(codeLength)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

