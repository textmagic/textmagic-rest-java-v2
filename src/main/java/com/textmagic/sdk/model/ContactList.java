/*
 * Textmagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.textmagic.sdk.model.ListImage;
import com.textmagic.sdk.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ContactList
 */

public class ContactList {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("favorited")
  private Boolean favorited = null;

  @SerializedName("membersCount")
  private Integer membersCount = null;

  @SerializedName("user")
  private User user = null;

  @SerializedName("service")
  private Boolean service = null;

  @SerializedName("shared")
  private Boolean shared = null;

  @SerializedName("avatar")
  private ListImage avatar = null;

  @SerializedName("isDefault")
  private Boolean isDefault = null;

  public ContactList id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * List ID.
   * @return id
  **/
  @ApiModelProperty(example = "715", required = true, value = "List ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ContactList name(String name) {
    this.name = name;
    return this;
  }

   /**
   * List name.
   * @return name
  **/
  @ApiModelProperty(example = "Private list", required = true, value = "List name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ContactList description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the list.
   * @return description
  **/
  @ApiModelProperty(example = "Private contacts of C. R. Conway", required = true, value = "Description of the list.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ContactList favorited(Boolean favorited) {
    this.favorited = favorited;
    return this;
  }

   /**
   * Is the List favorited? See [Favorites list](https://docs.textmagic.com/#operation/getFavourites).
   * @return favorited
  **/
  @ApiModelProperty(example = "false", required = true, value = "Is the List favorited? See [Favorites list](https://docs.textmagic.com/#operation/getFavourites).")
  public Boolean isFavorited() {
    return favorited;
  }

  public void setFavorited(Boolean favorited) {
    this.favorited = favorited;
  }

  public ContactList membersCount(Integer membersCount) {
    this.membersCount = membersCount;
    return this;
  }

   /**
   * List members count.
   * @return membersCount
  **/
  @ApiModelProperty(example = "332", required = true, value = "List members count.")
  public Integer getMembersCount() {
    return membersCount;
  }

  public void setMembersCount(Integer membersCount) {
    this.membersCount = membersCount;
  }

  public ContactList user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public ContactList service(Boolean service) {
    this.service = service;
    return this;
  }

   /**
   * Internal service field.
   * @return service
  **/
  @ApiModelProperty(required = true, value = "Internal service field.")
  public Boolean isService() {
    return service;
  }

  public void setService(Boolean service) {
    this.service = service;
  }

  public ContactList shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Is the list **shared** among all sub-accounts?
   * @return shared
  **/
  @ApiModelProperty(example = "false", required = true, value = "Is the list **shared** among all sub-accounts?")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }

  public ContactList avatar(ListImage avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @ApiModelProperty(required = true, value = "")
  public ListImage getAvatar() {
    return avatar;
  }

  public void setAvatar(ListImage avatar) {
    this.avatar = avatar;
  }

  public ContactList isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Indicates that List is used as a default. All new contacts added via the Web-app will be added in this List by default.
   * @return isDefault
  **/
  @ApiModelProperty(required = true, value = "Indicates that List is used as a default. All new contacts added via the Web-app will be added in this List by default.")
  public Boolean isIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactList contactList = (ContactList) o;
    return Objects.equals(this.id, contactList.id) &&
        Objects.equals(this.name, contactList.name) &&
        Objects.equals(this.description, contactList.description) &&
        Objects.equals(this.favorited, contactList.favorited) &&
        Objects.equals(this.membersCount, contactList.membersCount) &&
        Objects.equals(this.user, contactList.user) &&
        Objects.equals(this.service, contactList.service) &&
        Objects.equals(this.shared, contactList.shared) &&
        Objects.equals(this.avatar, contactList.avatar) &&
        Objects.equals(this.isDefault, contactList.isDefault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, favorited, membersCount, user, service, shared, avatar, isDefault);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactList {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    favorited: ").append(toIndentedString(favorited)).append("\n");
    sb.append("    membersCount: ").append(toIndentedString(membersCount)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

